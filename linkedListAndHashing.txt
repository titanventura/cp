#include<bits/stdc++.h>
using namespace std;
class Node
{
    public:
    int data;
    Node* next;
};

void printList(Node* head){
    while(head!=NULL){
        cout<< head->data<<" -> ";
        head=head->next;
    }
    cout<<"NULL"<<endl;
}

void printCircularList(Node* head){
    
    Node* temp = head;
    while(temp->next!=head){
        cout<< temp->data<<" -> ";
        temp=temp->next;
    }
    cout<<temp->data<<" -> ";
    cout<<"NULL"<<endl;
}

bool detectLoop(Node* head){
    unordered_set<Node*> visitedNodes;
    while(head!=NULL){
        if(visitedNodes.find(head) == visitedNodes.end()){
            visitedNodes.insert(head);
            head=head->next;
        }
        else{
            return true;
        }
    }
    return false;
}

bool removeLoop(Node* head){
    unordered_set<Node*> visitedNodes;
    Node* last;
    Node* temp = head;
    while(temp!=NULL){
        if(visitedNodes.find(temp) == visitedNodes.end()){
            visitedNodes.insert(temp);
            last = temp;
            temp=temp->next;
        }
        else{
            last->next = NULL;
            return true;
        }
    }
    return false;
}

int main(){
    /*
    Node* head=new Node();
    Node* firstNode=new Node();
    Node* secondNode = new Node();
    Node* thirdNode = new Node();
    Node* fourthNode = new Node();
    head->data=0;
    firstNode->data=1;
    secondNode->data=2;
    thirdNode->data= 3;
    fourthNode->data = 4;
    head->next = firstNode;
    firstNode->next = secondNode;
    secondNode->next = thirdNode;
    thirdNode->next = fourthNode;
    
    printList(head);
    
    cout<<"isLooped: "<<detectLoop(head)<<endl;
    
    fourthNode->next = secondNode;
    
    cout<<"isLooped: "<<detectLoop(head)<<endl;
    
    removeLoop(head);
    cout<<"isLooped: "<<detectLoop(head)<<endl;
    printList(head);
    */
    string s ="hariapple";
    
    unordered_map<char,int> count;
    
    for(int i=0;i<s.length();i++){
        count[s[i]]++;
    }
    
    for(auto x:count){
        //cout<<x.first<<" "<<x.second<<endl;
    }
    
    int countArr[26]={};
    
    for(int i=0;i<s.length();i++){
        countArr[s[i]-'a']++; // 'h'-1 'a'
    }
    
    for(int i=0;i<26;i++){
        if(countArr[i]!=0)
        cout<<(char)(i+'a')<<"  "<<countArr[i]<<endl;
    }
    
    cout<<(int)'a'<<endl;
    
    int a=10;
    count<<a;// O(1)
    
    return 0;
}